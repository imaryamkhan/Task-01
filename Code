#include <iostream>
#include <vector>

using namespace std;

// Function to display the Tic-Tac-Toe board
void displayBoard(const vector<vector<char>>& board) {
    cout << "  1   2   3" << endl;
    for (size_t i = 0; i < board.size(); ++i) {
        cout << " +---+---+---+" << endl;
        cout << i + 1 << "| ";
        for (size_t j = 0; j < board[i].size(); ++j) {
            cout << board[i][j] << " | ";
        }
        cout << endl;
    }
    cout << " +---+---+---+" << endl;
}

// Function to check if a player has won
bool checkWin(const vector<vector<char>>& board, char player) {
    // Check rows and columns
    for (size_t i = 0; i < board.size(); ++i) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;  // Horizontal win
        }
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
            return true;  // Vertical win
        }
    }

    // Check diagonals
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        return true;  // Diagonal win (top-left to bottom-right)
    }
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        return true;  // Diagonal win (top-right to bottom-left)
    }

    return false;  // No win
}

int main() {
    vector<vector<char>> board(3, vector<char>(3, ' '));
    int row, col;
    char currentPlayer = 'X';
    int moves = 0;

    cout << "Welcome to Tic-Tac-Toe!" << endl;

    do {
        // Display the current state of the board
        displayBoard(board);

        // Input move from the current player
        cout << "Player " << currentPlayer << ", enter your move (row and column): ";
        cin >> row >> col;

        // Check if the move is valid
        if (row >= 1 && row <= 3 && col >= 1 && col <= 3 && board[row - 1][col - 1] == ' ') {
            // Make the move
            board[row - 1][col - 1] = currentPlayer;
            moves++;

            // Check for a win
            if (checkWin(board, currentPlayer)) {
                displayBoard(board);
                cout << "Player " << currentPlayer << " wins!" << endl;
                break;
            }

            // Check for a draw
            if (moves == 9) {
                displayBoard(board);
                cout << "It's a draw!" << endl;
                break;
            }

            // Switch to the next player
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        }
        else {
            cout << "Invalid move. Please try again." << endl;
        }

    } while (true);

    return 0;  // Exit with success code 0
}
